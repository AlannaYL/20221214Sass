.a{
  color: red;
  background: white;
}

*,
*::before,
*::after{
  list-style: none;
  box-sizing: border-box;
}

body{
  font-family: '微軟正黑體';
}

.container{
  width: 75%;
  padding-left: 15px;
  padding-right: 15px;
  margin: auto;
}

h1,
h2,
h3,
h4,
h5,
h6{
  margin: 20px 0 20px;
}

p{
  margin-bottom: 1rem;
}

section{
  margin-bottom: 2rem !important;
}

// CSS 元生變數。可以被編譯出去
:root{
  --primary: #007bff;
  --secondary: #6c757d;
  --success: #28a745;
  --info: #17a2b8;
  --warning: #ffc107;
  --danger: #dc3545;
}

/* Sass 變數，不會被編譯出去*/
$primary: #007bff;
$secondary: #6c757d;
$success: #28a745;
$info: #17a2b8;
$warning: #ffc107;
$danger: #dc3545;
$deepblue: #2a5298;
$gradient: linear-gradient(top, #bdc2e8 0%, #bdc2e8 1%, #e6dee9 100%);
$border: 5px solid #fff;
$border-radius: 0.5rem;
$padding: 0.5rem 0.5rem;
$margin-bottom: 1rem;
$shadow: 0 0 5px rgba( 0, 0, 0, 0.8);

h1{
  background: $gradient;
  color: $deepblue;
  border: $border;
  border-radius: $border-radius;
  padding: $padding;
  box-shadow: $shadow;
  margin-bottom: $margin-bottom;
}

/* 04流程控制 */ 
$number: 10;
/* randpm 為 Sass 內建函式提供亂數功能，範例式 1-3 隨機 */
$number: (random(3));
.mybox {
width: 150px;
height: 150px;
display: flex;
justify-content: center;
align-items: center;
/* @if... @else if ... @else */ 
@if ($number == 1) {
  background-color: #faaca8;
}@else if $number == 2 {
  background-color: #c2e9fb;
}@else{
  background-color: #bdc2e8;
}

/* 字串分為引號，沒引號，判斷會通過 */
@if (helloworld == 'helloworld') {
  box-shadow: 0 0 10px 15px rgb(0, 0, 0, 0.5)
}

/* 使用 and 兩運算式條件成立 */
$stand: '石之自由';
$master: '空条徐倫';
@if ($stand == '石之自由' and $master == '空条徐倫'){
  color: #2a5298 !important;
} @else {
  color: #fff !important;
}

$isHeight: '高';
$isRich: '富';
$isHandsome: '帥';
@if ($isHeight == '高' or $isRich == '窮' ) {
  font-weight: bolder;
  font-size: 50px;
}

/* 使用 not 反轉運算式的結果 */
$box-width: 50px;
@if not($box-width == 100px) {
  border: 10px dashed #6c757d
}

$mySpacing: 20px;
outline: if($mySpacing > 10px, 10px solid #ffc107, 10px solid #2a5298)

}

@for $i from 1 through 3{
  .through-#{$i} {
    width: 50px * $i;
    height: 50px * $i;
    display: inline-block;
    background-color: #aaa;
  }
}

@for $i from 1 to 3{
  .to-#{$i} {
    width: 50px * $i;
    height: 50px * $i;
    display: inline-block;
    background-color: #aaa;
  }
}

/* 05. 嵌套 */
#section05 {
  p {border-bottom: 1px solid #faaca8;}

  .menu{
    margin-top: 2rem;
    padding: 0;
    font-size: 0;
    text-align: center;

    li {
    display: inline-block;
    font-size: 1rem;
    width: 100px;
    text-align: center;

      a {
      display: block;
      background: #bdc2e8;
      color: #2a5298;
      text-decoration: none;
      padding: .5rem;

      &:hover{
        color: #faaca8;
        background: #2a5298;
      }
      }

      & + li {
        border-left: 1px solid #c2e9fb;
      }

    }
  }
}

.clearfix{
  &::after{
    content: '';
    display: block;
    clear: both;
  }
}

/* bem巢狀寫法配合& */
/* BEM => block、elemnt、modifier */

// 父結構 block
.sidebar{
  padding-left: 0;
  display: flex;
  // 子元素__elemnt
  &__item{
    color: #faaca8;
    padding: 1rem;
    border: 1px solid #faaca8;
    text-decoration: none;
    background: #e6dee9;
    // 子元素--modifier
    &--active{
      background: #007bff;
    }
    &:hover{
      background-color: #bdc2e8;
      color: #2a5298;
    }
    & a {
      color: #e6dee9;
      display: block;
      line-height: 32px;
      text-decoration: none;
    }
  }
}

#exercise{
    .row {
      display: flex;
      }
      .col{
        width: 33.333%;
        padding: 1rem;
        margin: 1%;
        text-align: center;
        border: 1px solid #bdc2e8;
        background: #fff;
        box-shadow: 0 0 10px rgba(188, 182, 222, 0.5);
        transition: 0.5s;

        &:hover {
          transform: translateY(-25px);
        }
        a{
          color: #007bff;
          text-decoration: none;
          line-height: 1;
          padding: .5rem;
        }

        a:hover{
          color: #faaca8;
        }
    }
  }

  /* 06. 繼承 */
  %extend{
    width: 300px;
    height: 50px;
    float: left;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  #extend{
    margin-top: 1rem;
    overflow: hidden;
  }

  .box1{
    @extend %extend;
    background: #bdc2e8;
  }

  .box2{
    @extend %extend;
    background: #c2e9fb;
  }

  .box3{
    @extend %extend;
    background: #faaca8;
  }

  /* 07. 加法 */
  .box4{
    background: #2a5298;
    color: #e6dee9;

    /* 加法 */
    width: 50px + 50px;
    height: 50px + 50;
    height: 50px + 50px;

    /* 減法 */
    width: 100px - 50px;
    width: 100 - 50px;
    height: 100px - 50px;

    /* 乘法 */
    width: 50px * 2;
    // width: 50px * 2px; 編譯掛了

    /* 除法 */
    width: (100px / 2);

    $child: 500px;
    $mother: 10;
    height: $child / $mother;

    $child2: 10px;
    $mother2: 10px;
    line-height: $child2 / $mother2;

    /* 餘數 */
    margin-top: 20px % 100;

    $var1: 20px;
    $var2: 1vw;
  }

  /* 08. Function函式 */
  @function randomFont(){
    $result: random(3);
    @if (result == 1){
      @return 20px;
    }@else if($result == 2){
      @return 40px;
    }@else{
      @return 20px;
    }
  }

// 傳參數
@function boxLength1($length, $base){
  @return $length * $base * 1px;
}

// 指定預設值
@function boxLength2($length: 100, $base: 1){
  @return $length * $base * 1px;
}


  .funcbox{
    width: 300px;
    height: 300px;
    color: #fff;
    background: #faaca8;
    font-size: randomFont();
    width: boxLength1(100, 2);
    height: boxLength2();

  }

  // px to rem
  @function rem($px){
    // unit() 為內建函式，判斷傳入的參數是否有 px 
    @if(unit($px) == 'px'){
      @return ($px / 16px) * 1rem;
    } @else{
      @return ($px / 16) * 1rem;
    }
  }

  .rem {
    font-size: rem(16px);
    padding: rem(48);
  }

  $baseFontSize: 14px;
  $size: 2px;

  @function fontSize($level: 1) {
    @if ($level < 0) {
      $level: 1;
    }
    // 四捨五入，內建函式
    @return round($baseFontSize + $size * $level);
  }

  $lineHeightLevel: 1.5;
  @function lineHeight($fontSize) {
    // ceil無條件進位，內建函式。
    @return ceil($fontSize * $lineHeightLevel);
  }
    // 灰階
  @function gray($level: 0%) {
    // 內建函式顏色變深，0%~100%
    @return darken(#fff, $level);
  }

#section08{
  .container{
    p {
      font-size: fontSize(2);
      line-height: lineHeight(fontSize(2));
      background: gray(10%);
    }
  }
}